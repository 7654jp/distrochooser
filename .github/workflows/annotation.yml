name: Annotation

on:
  issue_comment:
    types: [created]



jobs:
  annotate:
    runs-on: ubuntu-latest
    if: github.actor == 'cmllr' && github.event.issue.pull_request && contains(github.event.comment.body, '/check')
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Checkout Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_URL="${{ github.event.issue.pull_request.url }}"
          PR_NUM=${PR_URL##*/}
          echo "Checking out from PR #$PR_NUM based on URL: $PR_URL"
          hub pr checkout $PR_NUM
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip' # caching pip dependencies
      - run: pip install -r code/kuusi/requirements.txt
      - run: cd code/kuusi/ && python manage.py makemigrations
      - run: cd code/kuusi/ &&python manage.py migrate
      - run: cd code/kuusi/ &&python manage.py parse ../../matrix/matrix.toml
      - run: cd code/kuusi/ &&python manage.py annotate ../../matrix/ --markdown > ./annotation.txt
      - name: Add workflow result as comment on PR
        uses: actions/github-script@v6
        if: always()
        with:
          script: |
            const name = '${{ github.workflow	}}';
            const url = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
            const fs = require('fs')
            const annotationText = "üó£Ô∏è Localization check result - ${{ github.event.issue.pull_request.url }}\n\n"
            
            let result = fs.readFileSync('./code/kuusi/annotation.txt',  { encoding: 'utf8', flag: 'r' })

            github.rest.issues.removeLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ["check-result-success", "check-result-action-needed"]
            })
            let label = "check-result-action-needed"
            if (result.length == 0) {
              result +="\n\nü•≥ All language values are being updated!"
              label = "check-result-success"
            } else {
              result +="\n\nüö® Please note that a distribution can only be added when all localizations are updated."
            }
            

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: annotationText + result
            })
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: [label]
            })


          
          
